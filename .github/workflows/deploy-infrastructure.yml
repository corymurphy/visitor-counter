name: deploy-infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Infrastructure action'
        required: true
        default: 'deploy'
        type: choice
        options:
        - deploy
        - destroy
        - setup
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/infrastructure.yml'

env:
  TERRAFORM_VERSION: 1.12.2

jobs:
  terraform:
    name: terraform
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - uses: google-github-actions/auth@v2
      with:
          credentials_json: '${{ secrets.TERRAFORM_CREDENTIALS }}'

    - uses: google-github-actions/setup-gcloud@v1

    - run: terraform init
      working-directory: terraform      

    - run: terraform plan -out=tfplan
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      id: plan
      working-directory: terraform
      if: github.event.inputs.action != 'destroy'

    - run: terraform apply -auto-approve tfplan
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      working-directory: terraform
      if: github.event.inputs.action != 'destroy'

    - run: terraform destroy -auto-approve
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      working-directory: terraform
      if: github.event.inputs.action == 'destroy'

    - name: get instance ip
      id: instance_ip
      working-directory: terraform
      run: |
        if [ "${{ github.event.inputs.action }}" != "destroy" ]; then
          IP=$(terraform output -raw instance_ip)
          echo "instance_ip=$IP" >> $GITHUB_OUTPUT
          echo "Instance IP: $IP"
        fi
